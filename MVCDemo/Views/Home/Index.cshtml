@model IEnumerable<MVCDemo.Models.Employee>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div style="font-family:Arial">
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <td colspan="4">
                @*When you uncomment the lines of code in index action method and navigate to /Home/Index, the view ouput 
                is cached for 10 seconds. If you refresh the view, within 10 seconds you will get a cached response. 
                After 10 seconds, the cache expires, code is executed again and the output is cached for another 10 seconds.*@
                <b>Employee List retrieved @@ @DateTime.Now.ToString()</b>
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

    </table>
    <br /><br />
    @*Using below line of Code when you will navigate to /Home/Index. Notice that, everytime you refresh the page, 
        the time in the section of the page that displays employee list changes, but not the time, that displays the 
        employee count. This proves that, only a portion of the view, is cached.*@
    <b> @Html.Action("GetEmployeeCount") </b>
</div>