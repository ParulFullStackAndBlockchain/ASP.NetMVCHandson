@using PagedList;
@using PagedList.Mvc;

@model IPagedList<MVCDemo.Models.Employee>

@{
    ViewBag.Title = "Index";
}

<div style="font-family:Arial">
    <h2>Index</h2>
    <p>
        @using (@Html.BeginForm("Index", "Home", FormMethod.Get))
        {
            <b>Search By:</b>
            @Html.RadioButton("searchBy", "Name", true) <text>Name</text>
            @Html.RadioButton("searchBy", "Gender") <text>Gender</text><br />
            @Html.TextBox("search") <input type="submit" value="search" />
        }
    </p>
    <table border="1" class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>Action</th>
        </tr>

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="4">
                    No records match search criteria
                </td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
            }
        }
    </table>
    @*Below lines of code display the following :
        1. page numbers for paging
        2. the pager, only if there are more than 1 page
        3. current active page and the total number of pages
        4. number of rows displayed, of the total number of rows available.*@
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"],
    search = Request.QueryString["search"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded,
        DisplayItemSliceAndTotal = true})

</div>